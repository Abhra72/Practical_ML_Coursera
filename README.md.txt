{"payload":{"allShortcutsEnabled":false,"fileTree":{"":{"items":[{"name":"Prediction-Assignment-Writeup_files","path":"Prediction-Assignment-Writeup_files","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"Prediction-Assignment-Writeup.Rmd","path":"Prediction-Assignment-Writeup.Rmd","contentType":"file"},{"name":"Prediction-Assignment-Writeup.html","path":"Prediction-Assignment-Writeup.html","contentType":"file"},{"name":"Prediction-Assignment-Writeup.pdf","path":"Prediction-Assignment-Writeup.pdf","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"}],"totalCount":6}},"fileTreeProcessingTime":2.489791,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":312484306,"defaultBranch":"master","name":"Practical-Machine-Learning-Week-4","ownerLogin":"pteridin","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2020-11-13T05:45:09.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/29350560?v=4","public":true,"private":false,"isOrgOwned":false},"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"master","listCacheKey":"v0:1605249684.0","canEdit":false,"refType":"branch","currentOid":"c16c7d9f1fb527e2d276714df8664cca65e46d4b"},"path":"README.md","currentUser":null,"blob":{"rawLines":null,"stylingDirectives":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/pteridin/Practical-Machine-Learning-Week-4/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/pteridin/Practical-Machine-Learning-Week-4/security/dependabot","repoSecurityAndAnalysisPath":"/pteridin/Practical-Machine-Learning-Week-4/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"README.md","displayUrl":"https://github.com/pteridin/Practical-Machine-Learning-Week-4/blob/master/README.md?raw=true","headerInfo":{"blobSize":"12.2 KB","deleteInfo":{"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"fb67513","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fpteridin%2FPractical-Machine-Learning-Week-4%2Fblob%2Fmaster%2FREADME.md","isCSV":false,"isRichtext":true,"toc":[{"level":1,"text":"Practical Machine Learning","anchor":"practical-machine-learning","htmlText":"Practical Machine Learning"},{"level":2,"text":"Abstract","anchor":"abstract","htmlText":"Abstract"},{"level":2,"text":"Data Sources","anchor":"data-sources","htmlText":"Data Sources"},{"level":2,"text":"Data Import & Transformation","anchor":"data-import--transformation","htmlText":"Data Import &amp; Transformation"},{"level":2,"text":"Exploratory Analysis","anchor":"exploratory-analysis","htmlText":"Exploratory Analysis"},{"level":2,"text":"Model training","anchor":"model-training","htmlText":"Model training"},{"level":3,"text":"Splitting the data","anchor":"splitting-the-data","htmlText":"Splitting the data"},{"level":3,"text":"Training","anchor":"training","htmlText":"Training"},{"level":3,"text":"Evaluation","anchor":"evaluation","htmlText":"Evaluation"},{"level":2,"text":"Conclusion","anchor":"conclusion","htmlText":"Conclusion"},{"level":2,"text":"Prediction on the testing data","anchor":"prediction-on-the-testing-data","htmlText":"Prediction on the testing data"},{"level":2,"text":"Annex","anchor":"annex","htmlText":"Annex"},{"level":3,"text":"Exploratory Plot","anchor":"exploratory-plot","htmlText":"Exploratory Plot"},{"level":3,"text":"Predictor Impact","anchor":"predictor-impact","htmlText":"Predictor Impact"},{"level":3,"text":"Metrics for Random Forest","anchor":"metrics-for-random-forest","htmlText":"Metrics for Random Forest"}],"lineInfo":{"truncatedLoc":"370","truncatedSloc":"304"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Markdown","languageID":222,"large":false,"loggedIn":false,"newDiscussionPath":"/pteridin/Practical-Machine-Learning-Week-4/discussions/new","newIssuePath":"/pteridin/Practical-Machine-Learning-Week-4/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/pteridin/Practical-Machine-Learning-Week-4/blob/master/README.md","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/pteridin/Practical-Machine-Learning-Week-4/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/pteridin/Practical-Machine-Learning-Week-4/raw/master/README.md","renderImageOrRaw":false,"richText":"<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1 tabindex=\"-1\" id=\"user-content-practical-machine-learning\" dir=\"auto\"><a class=\"heading-link\" href=\"#practical-machine-learning\">Practical Machine Learning<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h1>\n<p dir=\"auto\">Tobias Heidler\n2020-11-14</p>\n<ul dir=\"auto\">\n<li><a href=\"#abstract\">Abstract</a></li>\n<li><a href=\"#data-sources\">Data Sources</a></li>\n<li><a href=\"#data-import-transformation\">Data Import &amp; Transformation</a></li>\n<li><a href=\"#exploratory-analysis\">Exploratory Analysis</a></li>\n<li><a href=\"#model-training\">Model training</a>\n<ul dir=\"auto\">\n<li><a href=\"#splitting-the-data\">Splitting the data</a></li>\n<li><a href=\"#training\">Training</a></li>\n<li><a href=\"#evaluation\">Evaluation</a></li>\n</ul>\n</li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n<li><a href=\"#prediction-on-the-testing-data\">Prediction on the testing data</a></li>\n<li><a href=\"#annex\">Annex</a>\n<ul dir=\"auto\">\n<li><a href=\"#exploratory-plot\">Exploratory Plot</a></li>\n<li><a href=\"#predictor-impact\">Predictor Impact</a></li>\n<li><a href=\"#metrics-for-random-forest\">Metrics for Random Forest</a></li>\n</ul>\n</li>\n</ul>\n<h2 tabindex=\"-1\" id=\"user-content-abstract\" dir=\"auto\"><a class=\"heading-link\" href=\"#abstract\">Abstract<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<p dir=\"auto\">In this analysis we try to predict the manner in which people exercise\nbased on accelerometers on the belt, forearm, arm, and dumbell of 6\nparticipants from the Weight Lifting Exercise Dataset using different\nmachine learning algorithms.</p>\n<p dir=\"auto\">Six participants were asked to perform barbell lifts correcty and\nincorrectly in five different manners wearing fitness trackers like\nJawbone Up, Nike FuelBand, and Fitbit in this dataset. The data gained\nfrom this devices is used to train the models.</p>\n<p dir=\"auto\"><em>If you want to run this analysis from this Markdown document please\nmake sure to have pml-testing.csv and pml-training.csv in the root\ndirectory of this document. Furthermore the models trained by this\nnotebook will be saved in the root directory.</em></p>\n<h2 tabindex=\"-1\" id=\"user-content-data-sources\" dir=\"auto\"><a class=\"heading-link\" href=\"#data-sources\">Data Sources<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<p dir=\"auto\">The following datasets will be used:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\" rel=\"nofollow\">Training</a></li>\n<li><a href=\"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\" rel=\"nofollow\">Testing</a></li>\n<li><a href=\"http://groupware.les.inf.puc-rio.br/har\" rel=\"nofollow\">More Information</a></li>\n</ul>\n<h2 tabindex=\"-1\" id=\"user-content-data-import--transformation\" dir=\"auto\"><a class=\"heading-link\" href=\"#data-import--transformation\">Data Import &amp; Transformation<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<p dir=\"auto\">Import libraries and the data set. The variables <code>raw_timestamp_part_1</code>\nand <code>raw_timestamp_part_2</code> were combined to a more precise\n<code>cvtd_timestamp</code> giving microseconds accuracy.</p>\n<p dir=\"auto\"><code>new_window</code> and columns with a high number of missing values were\ndropped. These values contain summary statistics like maximum, minimum\nand sd of numeric variables within each time window, but these are not\navailable in most of the testing data and cannot be inferred by the\ntesting data set alone. Thus these values were dropped, even though they\ncould be useful for this classification task in a real world setting.</p>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"options(tidyverse.quiet = TRUE)\n\n\nsuppressPackageStartupMessages({\n  suppressMessages({\n    library(tidyverse)\n    library(lubridate)\n    library(caret)\n    library(doParallel)\n    library(lime)\n  })\n})  \n\ntheme_set(theme_light())\n\n# Load Data\nsuppressWarnings({\npml_training &lt;- readr::read_csv(&quot;pml-training.csv&quot;, \n                                na=c(&quot;&quot;, &quot;#DIV/0!&quot;, &quot;NA&quot;), \n                                progress = F,\n                                col_types = cols())\n\npml_testing  &lt;- readr::read_csv(&quot;pml-testing.csv&quot;,\n                                na=c(&quot;&quot;, &quot;#DIV/0!&quot;, &quot;NA&quot;), \n                                progress = F,\n                                col_types = cols())})\n\n# Collect Informations\nmissingValues &lt;- sapply(pml_training, function(x) sum(is.na(x)))\nmissingValues &lt;- missingValues[missingValues&gt;0]\nuserNames &lt;- unique(pml_training$user_name)\n\n# Prepare Data\nprepare &lt;- function(x,.train=T) {\n  x$cvtd_timestamp &lt;- x$raw_timestamp_part_1 +  x$raw_timestamp_part_2/1000000\n  x$raw_timestamp_part_1 &lt;- NULL\n  x$raw_timestamp_part_2 &lt;- NULL\n  x$X1 &lt;- NULL\n  if(.train)\n    x$classe &lt;- as.factor(x$classe)\n  x$user_name &lt;- factor(x$user_name,userNames)\n  x$new_window &lt;- NULL\n  x %&gt;% select(-matches(names(missingValues)))\n} \n\npml_training &lt;- prepare(pml_training)\npml_testing &lt;- prepare(pml_testing,F)\"><pre>options(<span class=\"pl-v\">tidyverse.quiet</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">TRUE</span>)\n\n\nsuppressPackageStartupMessages({\n  suppressMessages({\n    library(<span class=\"pl-smi\">tidyverse</span>)\n    library(<span class=\"pl-smi\">lubridate</span>)\n    library(<span class=\"pl-smi\">caret</span>)\n    library(<span class=\"pl-smi\">doParallel</span>)\n    library(<span class=\"pl-smi\">lime</span>)\n  })\n})  \n\ntheme_set(theme_light())\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Load Data</span>\nsuppressWarnings({\n<span class=\"pl-smi\">pml_training</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-e\">readr</span><span class=\"pl-k\">::</span>read_csv(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pml-training.csv<span class=\"pl-pds\">\"</span></span>, \n                                <span class=\"pl-v\">na</span><span class=\"pl-k\">=</span>c(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>#DIV/0!<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NA<span class=\"pl-pds\">\"</span></span>), \n                                <span class=\"pl-v\">progress</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">F</span>,\n                                <span class=\"pl-v\">col_types</span> <span class=\"pl-k\">=</span> cols())\n\n<span class=\"pl-smi\">pml_testing</span>  <span class=\"pl-k\">&lt;-</span> <span class=\"pl-e\">readr</span><span class=\"pl-k\">::</span>read_csv(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pml-testing.csv<span class=\"pl-pds\">\"</span></span>,\n                                <span class=\"pl-v\">na</span><span class=\"pl-k\">=</span>c(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>#DIV/0!<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NA<span class=\"pl-pds\">\"</span></span>), \n                                <span class=\"pl-v\">progress</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">F</span>,\n                                <span class=\"pl-v\">col_types</span> <span class=\"pl-k\">=</span> cols())})\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Collect Informations</span>\n<span class=\"pl-smi\">missingValues</span> <span class=\"pl-k\">&lt;-</span> sapply(<span class=\"pl-smi\">pml_training</span>, <span class=\"pl-k\">function</span>(<span class=\"pl-smi\">x</span>) sum(is.na(<span class=\"pl-smi\">x</span>)))\n<span class=\"pl-smi\">missingValues</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-smi\">missingValues</span>[<span class=\"pl-smi\">missingValues</span><span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">0</span>]\n<span class=\"pl-smi\">userNames</span> <span class=\"pl-k\">&lt;-</span> unique(<span class=\"pl-smi\">pml_training</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">user_name</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Prepare Data</span>\n<span class=\"pl-en\">prepare</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-k\">function</span>(<span class=\"pl-smi\">x</span>,<span class=\"pl-v\">.train</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">T</span>) {\n  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">cvtd_timestamp</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">raw_timestamp_part_1</span> <span class=\"pl-k\">+</span>  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">raw_timestamp_part_2</span><span class=\"pl-k\">/</span><span class=\"pl-c1\">1000000</span>\n  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">raw_timestamp_part_1</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-c1\">NULL</span>\n  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">raw_timestamp_part_2</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-c1\">NULL</span>\n  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">X1</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-c1\">NULL</span>\n  <span class=\"pl-k\">if</span>(<span class=\"pl-smi\">.train</span>)\n    <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">classe</span> <span class=\"pl-k\">&lt;-</span> as.factor(<span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">classe</span>)\n  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">user_name</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-k\">factor</span>(<span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">user_name</span>,<span class=\"pl-smi\">userNames</span>)\n  <span class=\"pl-smi\">x</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">new_window</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-c1\">NULL</span>\n  <span class=\"pl-smi\">x</span> %<span class=\"pl-k\">&gt;</span>% select(<span class=\"pl-k\">-</span>matches(names(<span class=\"pl-smi\">missingValues</span>)))\n} \n\n<span class=\"pl-smi\">pml_training</span> <span class=\"pl-k\">&lt;-</span> prepare(<span class=\"pl-smi\">pml_training</span>)\n<span class=\"pl-smi\">pml_testing</span> <span class=\"pl-k\">&lt;-</span> prepare(<span class=\"pl-smi\">pml_testing</span>,<span class=\"pl-c1\">F</span>)</pre></div>\n<h2 tabindex=\"-1\" id=\"user-content-exploratory-analysis\" dir=\"auto\"><a class=\"heading-link\" href=\"#exploratory-analysis\">Exploratory Analysis<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<p dir=\"auto\">As seen in the first exploratory plot in the annex section there are\nmany missing values which we will exclude in the upcoming analysis.\nFurthermore the data shows a huge amount of variability that can be\ndampened by centering and normalizing, though we still have some\noutliers. The number of these outliers is low, so all data is used for\ntraining the models.</p>\n<h2 tabindex=\"-1\" id=\"user-content-model-training\" dir=\"auto\"><a class=\"heading-link\" href=\"#model-training\">Model training<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<p dir=\"auto\">The training dataset is split into two parts, train and validate (80% :\n20% Split). Crossvalidations of train will be used to detect out of\nsample (OOS) errors and the validate data set to detect overfitting.\nExpected OOS-error will be less than 1% in case of a good prediction\nalgorithm. Train will be used to train three different algorithms:</p>\n<ul dir=\"auto\">\n<li>Classification and Regression Trees <code>rpart</code></li>\n<li>Random Forest <code>rf</code></li>\n<li>Generalized Linear Model via Penalized Maximum Likelihood for\nMultinomial Models <code>glmnet</code></li>\n</ul>\n<p dir=\"auto\">For each algorithm five different parameter sets will be tuned\nautomatically on a 5x5 repeated, cross-validated train data set. The\nmodel for each algorithm with the best accuracy will be further\ndescribed.</p>\n<p dir=\"auto\">Time to compute these models is reduced by using multithreading\n(<code>doParallel</code> library, six threads, choose other values based on your\nsystem) and saving the models for further computations.</p>\n<h3 tabindex=\"-1\" id=\"user-content-splitting-the-data\" dir=\"auto\"><a class=\"heading-link\" href=\"#splitting-the-data\">Splitting the data<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h3>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Prepare Center and Scale\nprepare &lt;- preProcess(pml_training,\n                      method = c(&quot;center&quot;, &quot;scale&quot;))\n                      \n# Split Dataset\ninTraining &lt;- createDataPartition(pml_training$classe, \n                                  p = .8, \n                                  list = T)\n\ntrain &lt;- pml_training[inTraining$Resample1,] \nvalidate &lt;- pml_training[-inTraining$Resample1,]\n\n# Apply Center and Scale\ntrain &lt;- predict(prepare, train)\nvalidate &lt;- predict(prepare, validate)\ntest &lt;- predict(prepare, pml_testing)\n\n# Crossfold Validation x5\nfitControl &lt;- trainControl(method = &quot;repeatedcv&quot;,\n                           number = 5,\n                           repeats = 5,\n                           savePredictions=TRUE,\n                           classProbs=TRUE)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Prepare Center and Scale</span>\n<span class=\"pl-smi\">prepare</span> <span class=\"pl-k\">&lt;-</span> preProcess(<span class=\"pl-smi\">pml_training</span>,\n                      <span class=\"pl-v\">method</span> <span class=\"pl-k\">=</span> c(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>center<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scale<span class=\"pl-pds\">\"</span></span>))\n                      \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Split Dataset</span>\n<span class=\"pl-smi\">inTraining</span> <span class=\"pl-k\">&lt;-</span> createDataPartition(<span class=\"pl-smi\">pml_training</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">classe</span>, \n                                  <span class=\"pl-v\">p</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">.8</span>, \n                                  <span class=\"pl-v\">list</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">T</span>)\n\n<span class=\"pl-smi\">train</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-smi\">pml_training</span>[<span class=\"pl-smi\">inTraining</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">Resample1</span>,] \n<span class=\"pl-smi\">validate</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-smi\">pml_training</span>[<span class=\"pl-k\">-</span><span class=\"pl-smi\">inTraining</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">Resample1</span>,]\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Apply Center and Scale</span>\n<span class=\"pl-smi\">train</span> <span class=\"pl-k\">&lt;-</span> predict(<span class=\"pl-smi\">prepare</span>, <span class=\"pl-smi\">train</span>)\n<span class=\"pl-smi\">validate</span> <span class=\"pl-k\">&lt;-</span> predict(<span class=\"pl-smi\">prepare</span>, <span class=\"pl-smi\">validate</span>)\n<span class=\"pl-smi\">test</span> <span class=\"pl-k\">&lt;-</span> predict(<span class=\"pl-smi\">prepare</span>, <span class=\"pl-smi\">pml_testing</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Crossfold Validation x5</span>\n<span class=\"pl-smi\">fitControl</span> <span class=\"pl-k\">&lt;-</span> trainControl(<span class=\"pl-v\">method</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>repeatedcv<span class=\"pl-pds\">\"</span></span>,\n                           <span class=\"pl-v\">number</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>,\n                           <span class=\"pl-v\">repeats</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>,\n                           <span class=\"pl-v\">savePredictions</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">TRUE</span>,\n                           <span class=\"pl-v\">classProbs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">TRUE</span>)</pre></div>\n<h3 tabindex=\"-1\" id=\"user-content-training\" dir=\"auto\"><a class=\"heading-link\" href=\"#training\">Training<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h3>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Prepare Parallel Computing\ncl &lt;- makePSOCKcluster(6)\nregisterDoParallel(cl)\n\nset.seed(825)\n\n# Model training\nif(!file.exists(&quot;model_rpartFit.rda&quot;)) {\n  rpartFit &lt;- train(classe ~ ., \n                       data = train, \n                       method = 'rpart',\n                       trControl = fitControl,\n                       metric = 'Accuracy',\n                       tuneLength  = 6)\n  save(rpartFit, file=&quot;model_rpartFit.rda&quot;) \n}\n\nif(!file.exists(&quot;model_rfFit.rda&quot;)) {\n  rfFit &lt;- train(classe ~ ., \n                 data = train, \n                 method = 'rf',\n                 trControl = fitControl,\n                 metric = 'Accuracy',\n                 tuneLength  = 6)\n  save(rfFit, file=&quot;model_rfFit.rda&quot;)\n}\n\nif(!file.exists(&quot;model_glmnet.rda&quot;)) {\n  glmFit &lt;- train(classe ~ ., \n                 data = train, \n                 method = &quot;glmnet&quot;,\n                 trControl = fitControl,\n                 metric = 'Accuracy',\n                 tuneLength  = 6, \n                 family = &quot;multinomial&quot;, \n                 type.multinomial = &quot;grouped&quot;)\n  save(glmFit, file=&quot;model_glmnet.rda&quot;)\n}\n                  \nstopCluster(cl)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Prepare Parallel Computing</span>\n<span class=\"pl-smi\">cl</span> <span class=\"pl-k\">&lt;-</span> makePSOCKcluster(<span class=\"pl-c1\">6</span>)\nregisterDoParallel(<span class=\"pl-smi\">cl</span>)\n\nset.seed(<span class=\"pl-c1\">825</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Model training</span>\n<span class=\"pl-k\">if</span>(<span class=\"pl-k\">!</span>file.exists(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_rpartFit.rda<span class=\"pl-pds\">\"</span></span>)) {\n  <span class=\"pl-smi\">rpartFit</span> <span class=\"pl-k\">&lt;-</span> train(<span class=\"pl-smi\">classe</span> <span class=\"pl-k\">~</span> <span class=\"pl-smi\">.</span>, \n                       <span class=\"pl-v\">data</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">train</span>, \n                       <span class=\"pl-v\">method</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rpart<span class=\"pl-pds\">'</span></span>,\n                       <span class=\"pl-v\">trControl</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">fitControl</span>,\n                       <span class=\"pl-v\">metric</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Accuracy<span class=\"pl-pds\">'</span></span>,\n                       <span class=\"pl-v\">tuneLength</span>  <span class=\"pl-k\">=</span> <span class=\"pl-c1\">6</span>)\n  save(<span class=\"pl-smi\">rpartFit</span>, <span class=\"pl-v\">file</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_rpartFit.rda<span class=\"pl-pds\">\"</span></span>) \n}\n\n<span class=\"pl-k\">if</span>(<span class=\"pl-k\">!</span>file.exists(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_rfFit.rda<span class=\"pl-pds\">\"</span></span>)) {\n  <span class=\"pl-smi\">rfFit</span> <span class=\"pl-k\">&lt;-</span> train(<span class=\"pl-smi\">classe</span> <span class=\"pl-k\">~</span> <span class=\"pl-smi\">.</span>, \n                 <span class=\"pl-v\">data</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">train</span>, \n                 <span class=\"pl-v\">method</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rf<span class=\"pl-pds\">'</span></span>,\n                 <span class=\"pl-v\">trControl</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">fitControl</span>,\n                 <span class=\"pl-v\">metric</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Accuracy<span class=\"pl-pds\">'</span></span>,\n                 <span class=\"pl-v\">tuneLength</span>  <span class=\"pl-k\">=</span> <span class=\"pl-c1\">6</span>)\n  save(<span class=\"pl-smi\">rfFit</span>, <span class=\"pl-v\">file</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_rfFit.rda<span class=\"pl-pds\">\"</span></span>)\n}\n\n<span class=\"pl-k\">if</span>(<span class=\"pl-k\">!</span>file.exists(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_glmnet.rda<span class=\"pl-pds\">\"</span></span>)) {\n  <span class=\"pl-smi\">glmFit</span> <span class=\"pl-k\">&lt;-</span> train(<span class=\"pl-smi\">classe</span> <span class=\"pl-k\">~</span> <span class=\"pl-smi\">.</span>, \n                 <span class=\"pl-v\">data</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">train</span>, \n                 <span class=\"pl-v\">method</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>glmnet<span class=\"pl-pds\">\"</span></span>,\n                 <span class=\"pl-v\">trControl</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">fitControl</span>,\n                 <span class=\"pl-v\">metric</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Accuracy<span class=\"pl-pds\">'</span></span>,\n                 <span class=\"pl-v\">tuneLength</span>  <span class=\"pl-k\">=</span> <span class=\"pl-c1\">6</span>, \n                 <span class=\"pl-v\">family</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>multinomial<span class=\"pl-pds\">\"</span></span>, \n                 <span class=\"pl-v\">type.multinomial</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>grouped<span class=\"pl-pds\">\"</span></span>)\n  save(<span class=\"pl-smi\">glmFit</span>, <span class=\"pl-v\">file</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_glmnet.rda<span class=\"pl-pds\">\"</span></span>)\n}\n                  \nstopCluster(<span class=\"pl-smi\">cl</span>)</pre></div>\n<h3 tabindex=\"-1\" id=\"user-content-evaluation\" dir=\"auto\"><a class=\"heading-link\" href=\"#evaluation\">Evaluation<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h3>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"getEvaluationData &lt;- function(model, name, data) {\n    tibble(Method = model$method,\n           Dataset = name,\n           broom::tidy(confusionMatrix( data=predict(model, data), \n                                        reference=data$classe)))\n}\n\nload(&quot;model_rpartFit.rda&quot;)\nload(&quot;model_rfFit.rda&quot;)\nload(&quot;model_glmnet.rda&quot;)\n\nperformance &lt;- tibble() %&gt;% \n                bind_rows(getEvaluationData(rpartFit, &quot;Training&quot;, train),\n                          getEvaluationData(rpartFit, &quot;Validate&quot;, validate),\n                          getEvaluationData(rfFit, &quot;Training&quot;, train),\n                          getEvaluationData(rfFit, &quot;Validate&quot;, validate),\n                          getEvaluationData(glmFit, &quot;Training&quot;, train),\n                          getEvaluationData(glmFit, &quot;Validate&quot;, validate))\n\nggplot(performance %&gt;% filter(term == &quot;accuracy&quot;),\n       aes(x=estimate,\n           xmin=conf.low,\n           xmax=conf.high,\n           y=Method)) +\n  geom_errorbar() +\n  geom_point() +\n  facet_wrap(.~Dataset) +\n  xlab(&quot;Accuracy&quot;) +\n  scale_x_continuous(labels=scales::label_percent(accuracy = 1),\n                     trans=&quot;log10&quot;) +\n  labs(title=&quot;Model Performance&quot;,\n       subtitle = &quot;Prediction Accuracy based on train and validation data&quot;)\"><pre><span class=\"pl-en\">getEvaluationData</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-k\">function</span>(<span class=\"pl-smi\">model</span>, <span class=\"pl-smi\">name</span>, <span class=\"pl-smi\">data</span>) {\n    tibble(<span class=\"pl-v\">Method</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">model</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">method</span>,\n           <span class=\"pl-v\">Dataset</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">name</span>,\n           <span class=\"pl-e\">broom</span><span class=\"pl-k\">::</span>tidy(confusionMatrix( <span class=\"pl-v\">data</span><span class=\"pl-k\">=</span>predict(<span class=\"pl-smi\">model</span>, <span class=\"pl-smi\">data</span>), \n                                        <span class=\"pl-v\">reference</span><span class=\"pl-k\">=</span><span class=\"pl-smi\">data</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">classe</span>)))\n}\n\nload(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_rpartFit.rda<span class=\"pl-pds\">\"</span></span>)\nload(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_rfFit.rda<span class=\"pl-pds\">\"</span></span>)\nload(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model_glmnet.rda<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-smi\">performance</span> <span class=\"pl-k\">&lt;-</span> tibble() %<span class=\"pl-k\">&gt;</span>% \n                bind_rows(getEvaluationData(<span class=\"pl-smi\">rpartFit</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Training<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">train</span>),\n                          getEvaluationData(<span class=\"pl-smi\">rpartFit</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Validate<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">validate</span>),\n                          getEvaluationData(<span class=\"pl-smi\">rfFit</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Training<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">train</span>),\n                          getEvaluationData(<span class=\"pl-smi\">rfFit</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Validate<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">validate</span>),\n                          getEvaluationData(<span class=\"pl-smi\">glmFit</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Training<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">train</span>),\n                          getEvaluationData(<span class=\"pl-smi\">glmFit</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Validate<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">validate</span>))\n\nggplot(<span class=\"pl-smi\">performance</span> %<span class=\"pl-k\">&gt;</span>% filter(<span class=\"pl-smi\">term</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>accuracy<span class=\"pl-pds\">\"</span></span>),\n       aes(<span class=\"pl-v\">x</span><span class=\"pl-k\">=</span><span class=\"pl-smi\">estimate</span>,\n           <span class=\"pl-v\">xmin</span><span class=\"pl-k\">=</span><span class=\"pl-smi\">conf.low</span>,\n           <span class=\"pl-v\">xmax</span><span class=\"pl-k\">=</span><span class=\"pl-smi\">conf.high</span>,\n           <span class=\"pl-v\">y</span><span class=\"pl-k\">=</span><span class=\"pl-smi\">Method</span>)) <span class=\"pl-k\">+</span>\n  geom_errorbar() <span class=\"pl-k\">+</span>\n  geom_point() <span class=\"pl-k\">+</span>\n  facet_wrap(<span class=\"pl-smi\">.</span><span class=\"pl-k\">~</span><span class=\"pl-smi\">Dataset</span>) <span class=\"pl-k\">+</span>\n  xlab(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Accuracy<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">+</span>\n  scale_x_continuous(<span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span><span class=\"pl-e\">scales</span><span class=\"pl-k\">::</span>label_percent(<span class=\"pl-v\">accuracy</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>),\n                     <span class=\"pl-v\">trans</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>log10<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">+</span>\n  labs(<span class=\"pl-v\">title</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Model Performance<span class=\"pl-pds\">\"</span></span>,\n       <span class=\"pl-v\">subtitle</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Prediction Accuracy based on train and validation data<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/pteridin/Practical-Machine-Learning-Week-4/blob/master/Prediction-Assignment-Writeup_files/figure-gfm/evaluation-1.png\"><img src=\"/pteridin/Practical-Machine-Learning-Week-4/raw/master/Prediction-Assignment-Writeup_files/figure-gfm/evaluation-1.png\" alt=\"\" style=\"max-width: 100%;\"></a></p>\n<h2 tabindex=\"-1\" id=\"user-content-conclusion\" dir=\"auto\"><a class=\"heading-link\" href=\"#conclusion\">Conclusion<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<p dir=\"auto\">The overall performance of <code>rf</code> is superior compared to the other two\nmodels, <code>rpart</code> and <code>glmnet</code>, on the training and validation dataset.\nOverall the accuracy of <code>rpart</code> and <code>glmnet</code> is lower than I expected.\nPerformance of the <code>glmnet</code> could be further improved by choosing higher\n<code>lambda</code>-values. Lower <code>lambda</code>-values provoke a warning message that no\nconvergence can be found after the maximum amount of iterations. Both\nmodels could improve by choosing a better parameter set.</p>\n<p dir=\"auto\">The performance of all models is is a bit lower on the validation data,\nbut overall near the accuracy of the training data implying a low OOS,\nwhich is less than 1 % according to the model metrics for <code>rf</code> (0.08%,\nsee: Metrics for Random Forest), and rejecting an overfitting of the\ntrain data split as seen in the validation data prediction accuracy.\nThis low OOS-error is as expected. Though I suspect, given extremly high\naccuracy of the <code>rf</code> model, that this model would perform poorly in a\nreal world setting with other participiants and other measuring devices.\nA problem known for machine learning. This is further described in <a href=\"https://arxiv.org/abs/2011.03395\" rel=\"nofollow\">this\npaper</a> for example.</p>\n<p dir=\"auto\">This could be avoided by removing predictors that are highly specific to\nthis data set, like the <code>user_name</code>, <code>num_window</code> or <code>cvtd_timestamp</code>\nand aquiring a much bigger data set with more devices and more diverse\nusers. <code>cvtd_timestamp</code> seems to have a reasonable high impact on the\nprediction but has no impact in a real world setting (see: Predictor\nImpact in the Annex).</p>\n<p dir=\"auto\">Given the near perfect accuracy of the <code>rf</code> model on the validation\ndataset no further modeling techniques like ensemble models or further\nparameter tuning is performed and this model is choosen for predicting\nthe testing data set.</p>\n<h2 tabindex=\"-1\" id=\"user-content-prediction-on-the-testing-data\" dir=\"auto\"><a class=\"heading-link\" href=\"#prediction-on-the-testing-data\">Prediction on the testing data<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"tibble(N = 1:nrow(test), \n       Classe=predict(rfFit, test))\"><pre>tibble(<span class=\"pl-v\">N</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span><span class=\"pl-k\">:</span>nrow(<span class=\"pl-smi\">test</span>), \n       <span class=\"pl-v\">Classe</span><span class=\"pl-k\">=</span>predict(<span class=\"pl-smi\">rfFit</span>, <span class=\"pl-smi\">test</span>))</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"## # A tibble: 20 x 2\n##        N Classe\n##    &lt;int&gt; &lt;fct&gt; \n##  1     1 B     \n##  2     2 A     \n##  3     3 B     \n##  4     4 A     \n##  5     5 A     \n##  6     6 E     \n##  7     7 D     \n##  8     8 B     \n##  9     9 A     \n## 10    10 A     \n## 11    11 B     \n## 12    12 C     \n## 13    13 B     \n## 14    14 A     \n## 15    15 E     \n## 16    16 E     \n## 17    17 A     \n## 18    18 B     \n## 19    19 B     \n## 20    20 B\"><pre class=\"notranslate\"><code>## # A tibble: 20 x 2\n##        N Classe\n##    &lt;int&gt; &lt;fct&gt; \n##  1     1 B     \n##  2     2 A     \n##  3     3 B     \n##  4     4 A     \n##  5     5 A     \n##  6     6 E     \n##  7     7 D     \n##  8     8 B     \n##  9     9 A     \n## 10    10 A     \n## 11    11 B     \n## 12    12 C     \n## 13    13 B     \n## 14    14 A     \n## 15    15 E     \n## 16    16 E     \n## 17    17 A     \n## 18    18 B     \n## 19    19 B     \n## 20    20 B\n</code></pre></div>\n<h2 tabindex=\"-1\" id=\"user-content-annex\" dir=\"auto\"><a class=\"heading-link\" href=\"#annex\">Annex<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h2>\n<h3 tabindex=\"-1\" id=\"user-content-exploratory-plot\" dir=\"auto\"><a class=\"heading-link\" href=\"#exploratory-plot\">Exploratory Plot<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h3>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Detect missing value fields\n\nnClasses &lt;- pml_training %&gt;% count(classe)\n\npar(mfrow=c(2,2))\nbarplot(missingValues, ylab=&quot;N(Only Missing Values)&quot;, xlab=&quot;Colname&quot;, main=&quot;Missing Values&quot;)\nboxplot(sapply(pml_training %&gt;% \n                 select_if(is.numeric), \n               function(x) (x - sd(x)) / (mean(x))),\n        ylab=&quot;Normalized-Centered Values&quot;, xlab=&quot;Colname&quot;, main=&quot;Values&quot;)\nbarplot(n ~ classe, data=nClasses, ylab=&quot;N(Classes)&quot;, xlab=&quot;Class&quot;, main=&quot;Class Count&quot;)\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Detect missing value fields</span>\n\n<span class=\"pl-smi\">nClasses</span> <span class=\"pl-k\">&lt;-</span> <span class=\"pl-smi\">pml_training</span> %<span class=\"pl-k\">&gt;</span>% count(<span class=\"pl-smi\">classe</span>)\n\npar(<span class=\"pl-v\">mfrow</span><span class=\"pl-k\">=</span>c(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">2</span>))\nbarplot(<span class=\"pl-smi\">missingValues</span>, <span class=\"pl-v\">ylab</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>N(Only Missing Values)<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">xlab</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Colname<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">main</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Missing Values<span class=\"pl-pds\">\"</span></span>)\nboxplot(sapply(<span class=\"pl-smi\">pml_training</span> %<span class=\"pl-k\">&gt;</span>% \n                 select_if(<span class=\"pl-smi\">is.numeric</span>), \n               <span class=\"pl-k\">function</span>(<span class=\"pl-smi\">x</span>) (<span class=\"pl-smi\">x</span> <span class=\"pl-k\">-</span> sd(<span class=\"pl-smi\">x</span>)) <span class=\"pl-k\">/</span> (mean(<span class=\"pl-smi\">x</span>))),\n        <span class=\"pl-v\">ylab</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Normalized-Centered Values<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">xlab</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Colname<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">main</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Values<span class=\"pl-pds\">\"</span></span>)\nbarplot(<span class=\"pl-smi\">n</span> <span class=\"pl-k\">~</span> <span class=\"pl-smi\">classe</span>, <span class=\"pl-v\">data</span><span class=\"pl-k\">=</span><span class=\"pl-smi\">nClasses</span>, <span class=\"pl-v\">ylab</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>N(Classes)<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">xlab</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Class<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">main</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Class Count<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/pteridin/Practical-Machine-Learning-Week-4/blob/master/Prediction-Assignment-Writeup_files/figure-gfm/Exploratory-1.png\"><img src=\"/pteridin/Practical-Machine-Learning-Week-4/raw/master/Prediction-Assignment-Writeup_files/figure-gfm/Exploratory-1.png\" alt=\"\" style=\"max-width: 100%;\"></a></p>\n<h3 tabindex=\"-1\" id=\"user-content-predictor-impact\" dir=\"auto\"><a class=\"heading-link\" href=\"#predictor-impact\">Predictor Impact<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h3>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"samples &lt;- c(826, 1870, 2215, 3068, 3759)\nexplainer &lt;- lime(train, rfFit)\nexplanation &lt;- explain(validate[c(samples[1]),], explainer, n_labels = 1, n_features = 10)\nplot_features(explanation) +\n  labs(title=&quot;Impact of Predictors&quot;,\n       subtitle=&quot;Based on an example in the validation data set&quot;,\n       caption=&quot;Index: 826&quot;)\"><pre><span class=\"pl-smi\">samples</span> <span class=\"pl-k\">&lt;-</span> c(<span class=\"pl-c1\">826</span>, <span class=\"pl-c1\">1870</span>, <span class=\"pl-c1\">2215</span>, <span class=\"pl-c1\">3068</span>, <span class=\"pl-c1\">3759</span>)\n<span class=\"pl-smi\">explainer</span> <span class=\"pl-k\">&lt;-</span> lime(<span class=\"pl-smi\">train</span>, <span class=\"pl-smi\">rfFit</span>)\n<span class=\"pl-smi\">explanation</span> <span class=\"pl-k\">&lt;-</span> explain(<span class=\"pl-smi\">validate</span>[c(<span class=\"pl-smi\">samples</span>[<span class=\"pl-c1\">1</span>]),], <span class=\"pl-smi\">explainer</span>, <span class=\"pl-v\">n_labels</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-v\">n_features</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>)\nplot_features(<span class=\"pl-smi\">explanation</span>) <span class=\"pl-k\">+</span>\n  labs(<span class=\"pl-v\">title</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Impact of Predictors<span class=\"pl-pds\">\"</span></span>,\n       <span class=\"pl-v\">subtitle</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Based on an example in the validation data set<span class=\"pl-pds\">\"</span></span>,\n       <span class=\"pl-v\">caption</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Index: 826<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/pteridin/Practical-Machine-Learning-Week-4/blob/master/Prediction-Assignment-Writeup_files/figure-gfm/PredictorImpact-1.png\"><img src=\"/pteridin/Practical-Machine-Learning-Week-4/raw/master/Prediction-Assignment-Writeup_files/figure-gfm/PredictorImpact-1.png\" alt=\"\" style=\"max-width: 100%;\"></a></p>\n<h3 tabindex=\"-1\" id=\"user-content-metrics-for-random-forest\" dir=\"auto\"><a class=\"heading-link\" href=\"#metrics-for-random-forest\">Metrics for Random Forest<svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></h3>\n<div class=\"highlight highlight-source-r notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"rfFit$finalModel\"><pre><span class=\"pl-smi\">rfFit</span><span class=\"pl-k\">$</span><span class=\"pl-smi\">finalModel</span></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"## \n## Call:\n##  randomForest(x = x, y = y, mtry = param$mtry) \n##                Type of random forest: classification\n##                      Number of trees: 500\n## No. of variables tried at each split: 24\n## \n##         OOB estimate of  error rate: 0.08%\n## Confusion matrix:\n##      A    B    C    D    E  class.error\n## A 4464    0    0    0    0 0.0000000000\n## B    2 3035    1    0    0 0.0009874918\n## C    0    2 2735    1    0 0.0010956903\n## D    0    0    2 2569    2 0.0015546055\n## E    0    0    0    3 2883 0.0010395010\"><pre class=\"notranslate\"><code>## \n## Call:\n##  randomForest(x = x, y = y, mtry = param$mtry) \n##                Type of random forest: classification\n##                      Number of trees: 500\n## No. of variables tried at each split: 24\n## \n##         OOB estimate of  error rate: 0.08%\n## Confusion matrix:\n##      A    B    C    D    E  class.error\n## A 4464    0    0    0    0 0.0000000000\n## B    2 3035    1    0    0 0.0009874918\n## C    0    2 2735    1    0 0.0010956903\n## D    0    0    2 2569    2 0.0015546055\n## E    0    0    0    3 2883 0.0010395010\n</code></pre></div>\n</article>","renderedFileInfo":null,"shortPath":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"pteridin","repoName":"Practical-Machine-Learning-Week-4","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":false,"symbols":[{"name":"Practical Machine Learning","kind":"section_1","identStart":0,"identEnd":26,"extentStart":0,"extentEnd":44,"fullyQualifiedName":"Practical Machine Learning","identUtf16":{"start":{"lineNumber":0,"utf16Col":0},"end":{"lineNumber":0,"utf16Col":26}},"extentUtf16":{"start":{"lineNumber":0,"utf16Col":0},"end":{"lineNumber":2,"utf16Col":0}}},{"name":" Abstract","kind":"section_2","identStart":676,"identEnd":685,"extentStart":674,"extentEnd":1430,"fullyQualifiedName":" Abstract","identUtf16":{"start":{"lineNumber":20,"utf16Col":2},"end":{"lineNumber":20,"utf16Col":11}},"extentUtf16":{"start":{"lineNumber":20,"utf16Col":0},"end":{"lineNumber":37,"utf16Col":0}}},{"name":" Data Sources","kind":"section_2","identStart":1432,"identEnd":1445,"extentStart":1430,"extentEnd":1718,"fullyQualifiedName":" Data Sources","identUtf16":{"start":{"lineNumber":37,"utf16Col":2},"end":{"lineNumber":37,"utf16Col":15}},"extentUtf16":{"start":{"lineNumber":37,"utf16Col":0},"end":{"lineNumber":45,"utf16Col":0}}},{"name":" Data Import & Transformation","kind":"section_2","identStart":1720,"identEnd":1749,"extentStart":1718,"extentEnd":3685,"fullyQualifiedName":" Data Import & Transformation","identUtf16":{"start":{"lineNumber":45,"utf16Col":2},"end":{"lineNumber":45,"utf16Col":31}},"extentUtf16":{"start":{"lineNumber":45,"utf16Col":0},"end":{"lineNumber":108,"utf16Col":0}}},{"name":" Exploratory Analysis","kind":"section_2","identStart":3687,"identEnd":3708,"extentStart":3685,"extentEnd":4073,"fullyQualifiedName":" Exploratory Analysis","identUtf16":{"start":{"lineNumber":108,"utf16Col":2},"end":{"lineNumber":108,"utf16Col":23}},"extentUtf16":{"start":{"lineNumber":108,"utf16Col":0},"end":{"lineNumber":117,"utf16Col":0}}},{"name":" Model training","kind":"section_2","identStart":4075,"identEnd":4090,"extentStart":4073,"extentEnd":8344,"fullyQualifiedName":" Model training","identUtf16":{"start":{"lineNumber":117,"utf16Col":2},"end":{"lineNumber":117,"utf16Col":17}},"extentUtf16":{"start":{"lineNumber":117,"utf16Col":0},"end":{"lineNumber":251,"utf16Col":0}}},{"name":" Splitting the data","kind":"section_3","identStart":5010,"identEnd":5029,"extentStart":5007,"extentEnd":5821,"fullyQualifiedName":" Splitting the data","identUtf16":{"start":{"lineNumber":139,"utf16Col":3},"end":{"lineNumber":139,"utf16Col":22}},"extentUtf16":{"start":{"lineNumber":139,"utf16Col":0},"end":{"lineNumber":167,"utf16Col":0}}},{"name":" Training","kind":"section_3","identStart":5824,"identEnd":5833,"extentStart":5821,"extentEnd":6993,"fullyQualifiedName":" Training","identUtf16":{"start":{"lineNumber":167,"utf16Col":3},"end":{"lineNumber":167,"utf16Col":12}},"extentUtf16":{"start":{"lineNumber":167,"utf16Col":0},"end":{"lineNumber":212,"utf16Col":0}}},{"name":" Evaluation","kind":"section_3","identStart":6996,"identEnd":7007,"extentStart":6993,"extentEnd":8344,"fullyQualifiedName":" Evaluation","identUtf16":{"start":{"lineNumber":212,"utf16Col":3},"end":{"lineNumber":212,"utf16Col":14}},"extentUtf16":{"start":{"lineNumber":212,"utf16Col":0},"end":{"lineNumber":251,"utf16Col":0}}},{"name":" Conclusion","kind":"section_2","identStart":8346,"identEnd":8357,"extentStart":8344,"extentEnd":10149,"fullyQualifiedName":" Conclusion","identUtf16":{"start":{"lineNumber":251,"utf16Col":2},"end":{"lineNumber":251,"utf16Col":13}},"extentUtf16":{"start":{"lineNumber":251,"utf16Col":0},"end":{"lineNumber":284,"utf16Col":0}}},{"name":" Prediction on the testing data","kind":"section_2","identStart":10151,"identEnd":10182,"extentStart":10149,"extentEnd":10785,"fullyQualifiedName":" Prediction on the testing data","identUtf16":{"start":{"lineNumber":284,"utf16Col":2},"end":{"lineNumber":284,"utf16Col":33}},"extentUtf16":{"start":{"lineNumber":284,"utf16Col":0},"end":{"lineNumber":315,"utf16Col":0}}},{"name":" Annex","kind":"section_2","identStart":10787,"identEnd":10793,"extentStart":10785,"extentEnd":12481,"fullyQualifiedName":" Annex","identUtf16":{"start":{"lineNumber":315,"utf16Col":2},"end":{"lineNumber":315,"utf16Col":8}},"extentUtf16":{"start":{"lineNumber":315,"utf16Col":0},"end":{"lineNumber":370,"utf16Col":0}}},{"name":" Exploratory Plot","kind":"section_3","identStart":10798,"identEnd":10815,"extentStart":10795,"extentEnd":11382,"fullyQualifiedName":" Exploratory Plot","identUtf16":{"start":{"lineNumber":317,"utf16Col":3},"end":{"lineNumber":317,"utf16Col":20}},"extentUtf16":{"start":{"lineNumber":317,"utf16Col":0},"end":{"lineNumber":335,"utf16Col":0}}},{"name":" Predictor Impact","kind":"section_3","identStart":11385,"identEnd":11402,"extentStart":11382,"extentEnd":11824,"fullyQualifiedName":" Predictor Impact","identUtf16":{"start":{"lineNumber":335,"utf16Col":3},"end":{"lineNumber":335,"utf16Col":20}},"extentUtf16":{"start":{"lineNumber":335,"utf16Col":0},"end":{"lineNumber":349,"utf16Col":0}}},{"name":" Metrics for Random Forest","kind":"section_3","identStart":11827,"identEnd":11853,"extentStart":11824,"extentEnd":12481,"fullyQualifiedName":" Metrics for Random Forest","identUtf16":{"start":{"lineNumber":349,"utf16Col":3},"end":{"lineNumber":349,"utf16Col":29}},"extentUtf16":{"start":{"lineNumber":349,"utf16Col":0},"end":{"lineNumber":370,"utf16Col":0}}}]}},"copilotInfo":null,"csrf_tokens":{"/pteridin/Practical-Machine-Learning-Week-4/branches":{"post":"mdJgJbRhj0Nr8XB2C3hFl2iwSjunzoVCwXy2p4A6BQyUe-8SJ_bbKbshy3XcZ1CBt0HY4p84gkdHO8jUHQn00g"},"/repos/preferences":{"post":"v1QHA6tMyhoHPb9REOeK4V9d9PXMW3miipy1ZB0Za_GAKCvcmdPwMe3Ad5wUibEXqzqSj9HbcwSEYiMRT8xc0Q"}}},"title":"Practical-Machine-Learning-Week-4/README.md at master · pteridin/Practical-Machine-Learning-Week-4"}